import { GetStaticPropsContext } from 'next'
import Head from 'next/head'
import { StoryblokComponent } from 'storyblok-js-client'

import Storyblok, { useStoryblok } from '../lib/storyblok'
import DynamicComponent from '../components/DynamicComponent'

interface Props {
  story: StoryblokComponent<any>
  preview: boolean
}

export default function Home({ story, preview }: Props) {
  const pageStory = useStoryblok(story, preview)

  return (
    <div>
      <Head>
        <title>Milkcap Museum</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <h1 className="text-xl font-bold">
          {pageStory ? pageStory.name : 'Milkcap Museum'}
        </h1>
      </header>
      <DynamicComponent blok={pageStory.content} />
    </div>
  )
}

interface IStoryblokPrams {
  version: string
  cv?: number
}

export async function getStaticProps(context: GetStaticPropsContext) {
  let slug = 'home'
  let params: IStoryblokPrams = {
    version: 'draft',
  }

  if (context.preview) {
    params.version = 'draft'
    params.cv = Date.now()
  }

  let { data } = await Storyblok.get(`cdn/stories/${slug}`, params)

  return {
    props: {
      story: data ? data.story : false,
      preview: context.preview || false,
    },
    revalidate: 10,
  }
}
